plugins {
	id "java"
	id "application"
	id "idea"
	id "jacoco"
	id 'io.freefair.aspectj.post-compile-weaving' version '6.3.0'
	id 'org.graalvm.buildtools.native' version '0.9.10'
}

repositories {
	mavenCentral()
}

graalvmNative {
	binaries {
		main {
			mainClass = "com.amazonaws.services.lambda.runtime.api.client.AWSLambda"
			debug = true
			buildArgs.add("--initialize-at-build-time=org.slf4j,jdk.xml.internal.SecuritySupport,sun.instrument.InstrumentationImpl")
			buildArgs.add("--enable-url-protocols=http,https")
			buildArgs.add("--enable-http")
			buildArgs.add("--enable-https")
			configurationFileDirectories.from(file('src/main/resources/META-INF/native-image'))
		}
	}
}

dependencies {

	implementation "com.amazonaws:aws-lambda-java-runtime-interface-client:2.1.0",
			"com.amazonaws:aws-lambda-java-core:1.2.1",
			"com.amazonaws:aws-lambda-java-events:3.11.0",
			"com.amazonaws:aws-java-sdk-dynamodb:1.12.122",
			"com.nimbusds:oauth2-oidc-sdk:9.3.1",
			"com.fasterxml.jackson.core:jackson-core:2.13.0",
			"com.fasterxml.jackson.core:jackson-databind:2.13.0",
			"com.fasterxml.jackson.core:jackson-annotations:2.13.0",
			"org.apache.httpcomponents:httpclient:4.5.13",
			"org.slf4j:slf4j-simple:1.7.32",
			"software.amazon.awssdk:dynamodb-enhanced:2.17.89",
			"com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.0",
			"software.amazon.lambda:powertools-parameters:1.8.0",
			project(":lib")

	aspect 'software.amazon.lambda:powertools-tracing:1.11.0'

	compileOnly 'org.projectlombok:lombok:1.18.22'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'

	testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2',
			"org.mockito:mockito-core:4.1.0",
			"org.mockito:mockito-junit-jupiter:4.1.0",
			"com.github.tomakehurst:wiremock-jre8:2.31.0",
			"uk.org.webcompere:system-stubs-jupiter:1.1.0"
}

java {
	sourceCompatibility = JavaVersion.VERSION_11
	targetCompatibility = JavaVersion.VERSION_11
}

task buildZip(type: Zip) {
	from compileJava
	from processResources
	destinationDirectory = file("$rootDir/dist")
	into("lib") {
		from configurations.runtimeClasspath
	}
}

test {
	// Configures environment variable to avoid initialization of AWS X-Ray segments for each tests
	environment "LAMBDA_TASK_ROOT", "handler"
	useJUnitPlatform ()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required.set(true)
	}
}

AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  ipv-core-back

Globals:
  Function:
    Timeout: 20

Parameters:
  Environment:
    Type: String

Resources:

  IPVCoreAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: IPV Core API Gateway
      StageName: !Sub ${Environment}
      Auth:
        ApiKeyRequired: true

  IPVAccessTokenFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "ipv-access-token-${Environment}"
      CodeUri: IPVAccessTokenFunction
      Handler: uk.gov.di.ipv.core.accesstoken.AccessTokenHandler::handleRequest
      Runtime: java11
      PackageType: Zip
      CodeUri: ../lambdas/accesstoken
      Architectures:
        - x86_64
      MemorySize: 512
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref AccessTokensTable
        - DynamoDBReadPolicy:
            TableName: !Ref AuthCodesTable
      Events:
        IPVCoreAPI:
          Type: Api
          Properties:
            RestApiId:
              Ref: IPVCoreAPI
            Path: /token
            Method: POST

  IPVAuthorizationFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "ipv-authorization-${Environment}"
      CodeUri: IPVAuthorizationFunction
      Handler: uk.gov.di.ipv.core.authorization.AuthorizationHandler::handleRequest
      Runtime: java11
      PackageType: Zip
      CodeUri: ../lambdas/authorization
      Architectures:
        - x86_64
      MemorySize: 512
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref AuthCodesTable
      Events:
        IPVCoreAPI:
          Type: Api
          Properties:
            RestApiId:
              Ref: IPVCoreAPI
            Path: /authorize
            Method: POST

  IPVSessionFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "ipv-session-${Environment}"
      CodeUri: IPVSessionFunction
      Handler: uk.gov.di.ipv.core.session.IpvSessionHandler::handleRequest
      Runtime: java11
      PackageType: Zip
      CodeUri: ../lambdas/session
      Architectures:
        - x86_64
      MemorySize: 512
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref SessionsTable
      Events:
        IPVCoreAPI:
          Type: Api
          Properties:
            RestApiId:
              Ref: IPVCoreAPI
            Path: /ipv-session
            Method: POST

  IPVCredentialIssuerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "ipv-credential-issuer-${Environment}"
      CodeUri: IPVCredentialIssuerFunction
      Handler: uk.gov.di.ipv.core.credentialissuer.CredentialIssuerHandler::handleRequest
      Runtime: java11
      PackageType: Zip
      CodeUri: ../lambdas/credentialissuer
      Architectures:
        - x86_64
      MemorySize: 512
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref UserIssuedCredentialsTable
      Events:
        IPVCoreAPI:
          Type: Api
          Properties:
            RestApiId:
              Ref: IPVCoreAPI
            Path: /request-evidence
            Method: POST

  IPVUserIdentityFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "ipv-user-identity-${Environment}"
      CodeUri: IPVUserIdentityFunction
      Handler: uk.gov.di.ipv.core.useridentity.UserIdentityHandler::handleRequest
      Runtime: java11
      PackageType: Zip
      CodeUri: ../lambdas/useridentity
      Architectures:
        - x86_64
      MemorySize: 512
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref UserIssuedCredentialsTable
        - DynamoDBReadPolicy:
            TableName: !Ref AuthCodesTable
      Events:
        IPVCoreAPI:
          Type: Api
          Properties:
            RestApiId:
              Ref: IPVCoreAPI
            Path: /user-identity
            Method: GET

  CredentialIssuerConfig:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${Environment}/credential-issuers-config"
      Type: "String"
      Value: "FakeValue"

  UserIssuedCredentialsTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Sub "user-issued-credentials-${Environment}"

  AuthCodesTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Sub "auth-codes-${Environment}"

  AccessTokensTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Sub "access-tokens-${Environment}"

  SessionsTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Sub "sessions-${Environment}"


